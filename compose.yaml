x-app-php-attributes: &app-php-attributes
  image: ${IMAGES_PREFIX:-}app-php
  build:
    context: .
    target: app_dev
  restart: unless-stopped
  volumes:
    - .:/var/www/app
    - app-vendor:/var/www/app/vendor
    - fpm-sock:/var/run/php
  healthcheck:
    test: [ "CMD", "healthcheck" ]
    interval: 10s
    timeout: 3s
    retries: 10
    start_period: 60s
  depends_on:
    app-database:
      condition: service_healthy
  extra_hosts:
    - host.docker.internal:host-gateway
  command: ["php-fpm", "-F"]

x-app-database-attributes: &app-database-attributes
  image: postgres:${POSTGRES_VERSION:-17}-alpine
  restart: unless-stopped
  environment:
    POSTGRES_DB: ${POSTGRES_DB:-dbname}
    POSTGRES_USER: ${POSTGRES_USER:-user}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
  healthcheck:
    test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-dbname}", "-U", "${POSTGRES_USER:-user}" ]
    timeout: 5s
    retries: 5
    start_period: 60s
  volumes:
    - db-data:/var/lib/postgresql/data:rw

x-app-nginx-attributes: &app-nginx-attributes
  image: ${IMAGES_PREFIX:-}app-nginx
  build:
    context: .
    target: nginx_dev
  restart: unless-stopped
  volumes:
    - .docker/nginx/conf.d/proxy.conf:/etc/nginx/conf.d/proxy.conf
    - .docker/nginx/conf.d/gzip.conf:/etc/nginx/conf.d/gzip.conf
    - ./public:/var/www/app/public
    - fpm-sock:/var/run/php
  depends_on:
    app-php:
      condition: service_healthy
  healthcheck:
    test: ["CMD-SHELL", "nc -vz -w1 $(hostname) 80"]
    interval: 10s
    timeout: 5s
    retries: 5

services:
  app-database: *app-database-attributes
  app-php: *app-php-attributes
  app-nginx: *app-nginx-attributes

volumes:
  fpm-sock:
  app-vendor:
  db-data:
